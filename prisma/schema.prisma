generator client {
  provider = "prisma-client-js"
  output   = "app/generated/prisma/client"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum Status {
  CANCELLED
  CONFIRMED
  COMPLETED
  PENDING
}

enum Role {
  ADMIN
  STAFF
  CUSTOMER
}

model User {
  id          String     @id @default(uuid())
  name        String
  email       String     @unique
  password    String
  phone       String     @unique
  photo       String?
  role        Role
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  appointments     Appointment[]     @relation("CustomerAppointments")
  services         ServiceItem[]     @relation("StaffServices")
  staffAppointments Appointment[]    @relation("StaffAppointments")
}

model Appointment {
  id           String       @id @default(uuid())
  notes        String?
  date         DateTime
  time         String
  status       Status
  price        Float
  
  // to users with Role CUSTOMER
  customerId  String
  customer    User         @relation("CustomerAppointments", fields: [customerId], references: [id])

  // to users with Role STAFF
  staffId     String?
  staff       User?        @relation("StaffAppointments", fields: [staffId], references: [id])

  // to services
  serviceId   String
  service     ServiceItem  @relation(fields: [serviceId], references: [id])

  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model ServiceItem {
  id              String        @id @default(uuid())
  type            String
  price           Float
  duration        Int
  availability  Json

  staffId       String
  staff         User        @relation("StaffServices", fields: [staffId], references: [id])
  appointments  Appointment[]

  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}
